name: ESLint

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "25 21 * * 4"

jobs:
  eslint:
    name: Run ESLint Scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install-command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install-command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.install-command }}

      - name: Install ESLint dependencies
        run: |
          ${{ steps.detect-package-manager.outputs.manager }} add eslint@8.10.0
          ${{ steps.detect-package-manager.outputs.manager }} add @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} eslint . \
            --config .eslintrc.cjs \
            --ext .js,.jsx,.ts,.tsx
        #     --format @microsoft/eslint-formatter-sarif
        #     --output-file eslint-results.sarif

      # Uncomment the following step to upload SARIF results
      # - name: Upload analysis results to GitHub
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: eslint-results.sarif
      #     wait-for-processing: true
